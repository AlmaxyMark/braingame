import telebot
import random
from telebot import types
import json

token = "6986134803:AAEnbuLX2GdD7ayvRGL8nKGaFLeXstFFfMg"

greetings = ["–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –∏—Å–∫–∞—Ç–µ–ª—å –∑–Ω–∞–Ω–∏–π! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è –∏ –æ–±—É—á–µ–Ω–∏—è. –î–∞–≤–∞–π –≤–º–µ—Å—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –±—É–¥—É—â–µ–µ!",
             "–ü—Ä–∏–≤–µ—Ç! –ú—ã —Ç—É—Ç –∑–∞–Ω—è—Ç—ã –¥–µ–ª–æ–º - —Ä–∞–∑–≤–∏—Ç–∏–µ–º. –ê —Ç—ã –≥–æ—Ç–æ–≤ —Å—Ç–∞—Ç—å –ª—É—á—à–µ–π –≤–µ—Ä—Å–∏–µ–π —Å–µ–±—è? –ù–∞—á–Ω–µ–º —ç—Ç–æ —Å–µ–π—á–∞—Å!",
             "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞-–º–æ—Ç–∏–≤–∞—Ç–æ—Ä–∞. –ü–æ–π–¥–µ–º –≤–º–µ—Å—Ç–µ –ø–æ –ø—É—Ç–∏ –∫ —É—Å–ø–µ—Ö—É –∏ —Ä–∞–∑–≤–∏—Ç–∏—é!",
             "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –∏—Å–∫–∞—Ç–µ–ª—å –º—É–¥—Ä–æ—Å—Ç–∏! –°—Ç—Ä–µ–º–∏–º—Å—è –∫ –∑–Ω–∞–Ω–∏—è–º –∏ —Ä–∞–∑–≤–∏—Ç–∏—é - –≤–æ—Ç –Ω–∞—à –¥–µ–≤–∏–∑. –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —ç—Ç–æ—Ç —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!"]
option = ["–ü–æ–µ—Ö–∞–ª–∏, –≤—ã–±–∏—Ä–∞–π: –ª–∏–±–æ —á–∏—Å–ª–∞ –∏ –ª–æ–≥–∏–∫–∞, –ª–∏–±–æ —Å–ª–æ–≤–∞ –∏ –∑–∞–≥–∞–¥–∫–∏. –¢–≤–æ–π –º–æ–∑–≥ –≥–æ—Ç–æ–≤ –∫ –∫—Ä–µ–ø–∫–∏–º —É–º—Å—Ç–≤–µ–Ω–Ω—ã–º —Ç—è–∂–µ–ª—ã–º —à—Ç–∞–Ω–≥–∞–º?",
"–ó–∞–≥–∞–¥–∫–∏ –∏–ª–∏ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ - –≤—ã–±–∏—Ä–∞–π –º—É–¥—Ä–æ!",
"–ê —Å–µ–π—á–∞—Å –Ω–∞—à –±–æ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç: —Ñ–µ–µ—Ä–∏—á–µ—Å–∫–∏–π –∫–æ–Ω–∫—É—Ä—Å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –º–∞—Å—Ç–µ—Ä–æ–≤ –∏–ª–∏ –¥—É—Ö –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –º–µ–∂–¥—É –±—É–∫–≤–∞–º–∏. –°–¥–µ–ª–∞–π —Å–≤–æ–π –≤—ã–±–æ—Ä!",
"–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∏–ª–∏ –£–≥–∞–¥–∞–π —Å–ª–æ–≤–æ - –≤ –æ–±–æ–∏—Ö —Å–ª—É—á–∞—è—Ö —Ç–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –Ω–∞–ø—Ä—è—á—å—Å—è. –ö–∞–∫–æ–π –ø—É—Ç—å –≤—ã–±–µ—Ä–µ—à—å?"]
math = ["–ì–æ—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞–Ω–∏—è? –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!",
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫—É—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—É! –ì–æ—Ç–æ–≤—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è —á–∏—Å–µ–ª?",
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫—É—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—É! –£–≤–µ—Ä–µ–Ω, —Ç—ã —Å–ø—Ä–∞–≤–∏—à—å—Å—è —Å –∑–∞–¥–∞–Ω–∏—è–º–∏. –í–ø–µ—Ä—ë–¥, –¥–∞–≤–∞–π –Ω–∞—á–Ω–µ–º!",
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫—É—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—É! –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∑–∞–¥–∞—á–∫–∞–º –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏. –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å? –ê –µ—Å–ª–∏ –≥–æ—Ç–æ–≤—ã, —Ç–æ –ø–æ–µ—Ö–∞–ª–∏!"]
a1 = [
    "–í—ã–±–µ—Ä–∏—Ç–µ –±—É–∫–≤—É –∏ –ø–æ—Å–º–æ—Ç—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –æ–Ω–∞ –≤ —Å–ª–æ–≤–µ.",
    "–£ –≤–∞—Å –µ—Å—Ç—å 7 –ø–æ–ø—ã—Ç–æ–∫, —á—Ç–æ–±—ã –æ—Ç–≥–∞–¥–∞—Ç—å —Å–ª–æ–≤–æ.",
    "–£ –≤–∞—Å –≤—Å–µ–≥–æ 7 –ø–æ–ø—ã—Ç–æ–∫. –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º!",
    "–ì–æ–≤–æ—Ä—è—Ç, —á—Ç–æ —á–µ–º –º–µ–Ω—å—à–µ –±—É–∫–≤ –∏–º–µ–µ—Ç –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ, —Ç–µ–º –ø—Ä–æ—â–µ –µ–≥–æ —É–≥–∞–¥–∞—Ç—å. –ù–æ —Ç–∞–∫ –ª–∏ —ç—Ç–æ? –ß—Ç–æ –∂, –¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏–º"]
a2 = ["–û—Å—Ç–∞–ª–æ—Å—å 6 –ø–æ–ø—ã—Ç–æ–∫. –ù–µ –æ—Ç—á–∞–∏–≤–∞–π—Ç–µ—Å—å! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –æ—Ç–≥–∞–¥—ã–≤–∞—Ç—å –±—É–∫–≤—ã.",
      "–û–π, –≤—ã –æ—à–∏–±–ª–∏—Å—å! –î–∞–Ω–Ω–æ–π –±—É–∫–≤—ã –≤ —Å–ª–æ–≤–µ –Ω–µ—Ç.",
      "–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 6 –ø–æ–ø—ã—Ç–æ–∫. –í–∞—à–µ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–≤–µ—Ä–Ω–æ.",
      "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –û—Å—Ç–∞–ª–æ—Å—å 6 –ø–æ–ø—ã—Ç–æ–∫."]
a3 = ["–í—ã –Ω–µ –Ω–∞ –≤–µ—Ä–Ω–æ–º –ø—É—Ç–∏, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –æ—Ç–≥–∞–¥—ã–≤–∞—Ç—å!",
      "–ù–µ—Ç, –æ—à–∏–±–æ—á–∫–∞! –î–∞–Ω–Ω–∞—è –±—É–∫–≤–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∞—Å—Ç—å—é –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞. –û—Å—Ç–∞–ª–æ—Å—å 5 –ø–æ–ø—ã—Ç–æ–∫...",
      "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã —Å–Ω–æ–≤–∞ –æ—à–∏–±–ª–∏—Å—å.",
      "–≠—Ç–∞ –±—É–∫–≤–∞ –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ —Å–ª–æ–≤–æ. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 5 –ø–æ–ø—ã—Ç–æ–∫."]
a4 = ["–û—Å—Ç–∞–ª–æ—Å—å 4 –ø–æ–ø—ã—Ç–∫–∏.\n–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç–µ –±—É–∫–≤—ã –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ.",
      "–í–∞–º –æ—Å—Ç–∞–ª–æ—Å—å 4 –ø–æ–ø—ã—Ç–∫–∏. –ù–µ –æ—Ç—á–∞–∏–≤–∞–π—Ç–µ—Å—å!",
      "–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 4 –ø–æ–ø—ã—Ç–∫–∏. –í—ã —Å–Ω–æ–≤–∞ –Ω–µ —É–≥–∞–¥–∞–ª–∏.",
      "–ï—â—ë –Ω–µ–≤–µ—Ä–Ω–æ! –û—Å—Ç–∞–ª–æ—Å—å 4 –ø–æ–ø—ã—Ç–∫–∏."]
a5 = ["–û—á–µ—Ä–µ–¥–Ω–∞—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –±—É–∫–≤–∞. –í–∞–º –æ—Å—Ç–∞–ª–æ—Å—å –≤—Å–µ–≥–æ 3 –ø–æ–ø—ã—Ç–∫–∏. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏—Å–∫–∞—Ç—å!",
      "–û–π, —É–≤—ã! –≠—Ç–∞ –±—É–∫–≤–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 3 –ø–æ–ø—ã—Ç–∫–∏. –ù–µ —Å–¥–∞–≤–∞–π—Ç–µ—Å—å!",
      "–£–ø—Å! –≠—Ç–∞ –±—É–∫–≤–∞ –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 3 –ø–æ–ø—ã—Ç–∫–∏.",
      "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 3 –ø–æ–ø—ã—Ç–∫–∏."]
a6 = ["–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 2 –ø–æ–ø—ã—Ç–∫–∏.\n–ù–µ –¥–∞–π—Ç–µ —Å–µ–±–µ —Å–¥–∞—Ç—å—Å—è! –í–ø–µ—Ä–µ–¥, –æ—Ç–≥–∞–¥—ã–≤–∞–π—Ç–µ!",
      "–ê–π-—è–π-—è–π! –í–∞—à–∞ –±—É–∫–≤–∞ –Ω–µ –ø–æ–º–æ–≥–ª–∞ –Ω–∞–º –ø—Ä–∏–±–ª–∏–∑–∏—Ç—å—Å—è –∫ –æ—Ç–≥–∞–¥–∫–µ. –û—Å—Ç–∞–ª–æ—Å—å –≤—Å–µ–≥–æ 2 –ø–æ–ø—ã—Ç–∫–∞!",
      "–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å –≤—Å–µ–≥–æ 2 –ø–æ–ø—ã—Ç–∫–∏, –Ω–µ –æ—Ç—á–∞–∏–≤–∞–π—Ç–µ—Å—å!",
      "–£–ø—Å, –≤—ã –æ—à–∏–±–ª–∏—Å—å! –î–∞–Ω–Ω–æ–π –±—É–∫–≤—ã –≤ —Å–ª–æ–≤–µ –Ω–µ—Ç."]
a7 = ["–û—Ö, –≤—ã –æ—à–∏–±–ª–∏—Å—å —Å–Ω–æ–≤–∞. –û—Å—Ç–∞–ª–∞—Å—å –≤—Å–µ–≥–æ 1 –ø–æ–ø—ã—Ç–∫–∞. –ù–µ—É–∂–µ–ª–∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–≥–∞–¥–∞—Ç—å?",
      "–ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞! –ü—Ä–∏ –Ω–µ–≤–µ—Ä–Ω–æ–º –æ—Ç–≤–µ—Ç–µ –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–µ—Ç–µ.",
      "–ù–µ—á–∞—Å—Ç–æ –º–æ–∂–Ω–æ –ø–æ–±—ã–≤–∞—Ç—å –≤ —Ç–∞–∫–æ–º –ø–æ–ª–æ–∂–µ–Ω–∏–∏. –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å! –£ –≤–∞—Å –≤—Å–µ–≥–æ 1 –ø–æ–ø—ã—Ç–∫–∞!",
      "–ú–¥–∞... –û—Å—Ç–∞–ª–∞—Å—å –≤—Å–µ–≥–æ 1 –ø–æ–ø—ã—Ç–∫–∞."]
a0 = ["–ü—Ä–∏–≤–µ—Ç! –ï—Å–ª–∏ —Ç—ã –Ω–µ –∑–Ω–∞–∫–æ–º —Å –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≤–∏–∫—Ç–æ—Ä–∏–Ω–æ–π –∏ –£–≥–∞–¥–∞–π —Å–ª–æ–≤–æ, —Ç–æ —è —Å —Ä–∞–¥–æ—Å—Ç—å—é —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ –æ–± —ç—Ç–∏—Ö –∏–≥—Ä–∞—Ö. –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞ - —ç—Ç–æ –∏–≥—Ä–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ç–µ–±–µ –±—É–¥—É—Ç –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ, –∞ —Ç—ã –¥–æ–ª–∂–µ–Ω –±—É–¥–µ—à—å –≤—ã–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤. –£–≥–∞–¥–∞–π —Å–ª–æ–≤–æ –∂–µ - —ç—Ç–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞, –≥–¥–µ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –æ—Ç–≥–∞–¥–∞—Ç—å –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ, —É–≥–∞–¥—ã–≤–∞—è –ø–æ –æ–¥–Ω–æ–π –±—É–∫–≤–µ –∑–∞ —Ä–∞–∑.",
      "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –ù–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ò–≥—Ä—ã', —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫—É—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—É –∏–ª–∏ –£–≥–∞–¥–∞–π —Å–ª–æ–≤–æ. –í –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≤–∏–∫—Ç–æ—Ä–∏–Ω–µ —Ç–µ–±–µ –±—É–¥—É—Ç –∑–∞–¥–∞–≤–∞—Ç—å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã, –∞ –≤ –£–≥–∞–¥–∞–π —Å–ª–æ–≤–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –æ—Ç–≥–∞–¥–∞—Ç—å –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ. –ö—Å—Ç–∞—Ç–∏, –≤ –æ–±–µ–∏—Ö –∏–≥—Ä–∞—Ö –µ—Å—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª–∏—Ç —Ç–µ–±–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å. –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –≤—Ä–µ–º—è–ø—Ä–µ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è!",
      "–ü—Ä–∏–≤–µ—Ç! –° –∫–Ω–æ–ø–∫–æ–π '–ò–≥—Ä—ã' —Ç–µ–±–µ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–≤–µ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –∏–≥—Ä—ã: –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∏ –£–≥–∞–¥–∞–π —Å–ª–æ–≤–æ. –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ç–µ–±–µ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è. –£–≥–∞–¥–∞–π —Å–ª–æ–≤–æ - —ç—Ç–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞, –≥–¥–µ —Ç–≤–æ—è –∑–∞–¥–∞—á–∞ –æ—Ç–≥–∞–¥–∞—Ç—å —Å–ª–æ–≤–æ, –∏–º–µ—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫. –û–±–µ –∏–≥—Ä—ã –∏–º–µ—é—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª–∏—Ç —Ç–µ–±–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å. –ù–µ –±–æ–π—Å—è –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å!",
      "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –ï—Å–ª–∏ —Ç—ã –µ—â–µ –Ω–µ –æ–∑–Ω–∞–∫–æ–º–∏–ª—Å—è —Å –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≤–∏–∫—Ç–æ—Ä–∏–Ω–æ–π –∏ –£–≥–∞–¥–∞–π —Å–ª–æ–≤–æ, —Ç–æ —ç—Ç–æ –æ—Ç–ª–∏—á–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞–∑–≤–ª–µ—á—å—Å—è –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏. –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ç–µ–±–µ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã, –∞ –£–≥–∞–¥–∞–π —Å–ª–æ–≤–æ - —É–≥–∞–¥–∞—Ç—å —Å–ª–æ–≤–æ, –∏–º–µ—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫. –û–±–µ –∏–≥—Ä—ã —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—é—Ç—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª–∏—Ç —Ç–µ–±–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å.",
      "–ü—Ä–∏–≤–µ—Ç! –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –∏–≥—Ä–∞–º–∏, —è —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–º–æ–≥—É. –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞ - —ç—Ç–æ –∏–≥—Ä–∞, –≥–¥–µ —Ç–µ–±–µ –±—É–¥—É—Ç –∑–∞–¥–∞–≤–∞—Ç—å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã, –∏ —Ç—ã –¥–æ–ª–∂–µ–Ω –≤—ã–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤. –£–≥–∞–¥–∞–π —Å–ª–æ–≤–æ - —ç—Ç–æ –∏–≥—Ä–∞, –≥–¥–µ —Ç—ã –¥–æ–ª–∂–µ–Ω –æ—Ç–≥–∞–¥—ã–≤–∞—Ç—å —Å–ª–æ–≤–æ, –∏–º–µ—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫. –û–±–µ –∏–≥—Ä—ã –∏–º–µ—é—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, —Ç–∞–∫ —á—Ç–æ —Ç—ã —Å–º–æ–∂–µ—à—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å."]
HANGMAN = (
f"""
{random.choice(a2)} üòÜ
""",
f"""
{random.choice(a3)} üòÄ
""",
f"""
{random.choice(a4)} üôÇ
""",
f"""
{random.choice(a5)} üòê
""",
f"""
{random.choice(a6)} üòï
""",
f"""
{random.choice(a7)} ‚òπ
""",
"""
–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. –ü–æ–ø—ã—Ç–∞–π—Ç–µ—Å—å —Å–Ω–æ–≤–∞ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è, —á—Ç–æ–±—ã —É–ª—É—á—à–∏—Ç—å —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ –≤ –∏–≥—Ä–µ –£–≥–∞–¥–∞–π —Å–ª–æ–≤–æ. üòû
""")

with open("data.json", "r", encoding="utf-8") as f:
    data = json.load(f)

# with open("vocabulary.json", encoding="utf- 8") as v:
#     dataWords = json.load(v)

primte = list("—ë–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é")

tems = []
nameMoney = "–°–∏—è–Ω—ã"

bot = telebot.TeleBot(token)

def SaveData():
    with open("data.json", "w", encoding="utf-8") as f:
        json.dump(data, f, indent = 4, ensure_ascii = False)



@bot.message_handler(commands=["start"])
def start(message):
    userId = str(message.from_user.id)
    if not userId in data:
        data[userId] = {"isState": None,
                        "MathVictorina": {"rightAnswerLast": 0,
                                          "rightAnswerAllTime": 0,
                                          "maxRightAnswer": 0,
                                          "attempts": 3,
                                          "listWrongAnswer": [],
                                          "answer": 0},
                        "GuessTheWord":    {"listRightAnswer": [],
                                          "listWrongAnswer": [],
                                           "countGame": 0,
                                          },
                        "Money": 100
                        }
    else:
        data[userId]["isState"] = None

    boardkeyboard = types.ReplyKeyboardMarkup()
    but1 = types.KeyboardButton("–ò–≥—Ä—ã")
    but2 = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
    but3 = types.KeyboardButton("–ü–æ–º–æ—â—å")

    boardkeyboard.add(but1, but2, but3)
    bot.send_message(userId, random.choice(greetings), reply_markup = boardkeyboard)

    SaveData()


@bot.message_handler(content_types=['web_app_data'])
def handle_web_app_data(message):
    print(message)
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    site_data = message.web_app_data.data
    user_id = str(message.from_user.id)
    print(site_data)
    dataWeb = HandlerWeb(site_data)
    if dataWeb["isWin"] != "false":
        data[user_id]["GuessTheWord"]["listRightAnswer"].append(dataWeb["word"])
        # data[user_id]["Money"] += int(dataWeb["isGift"])
    else:
        data[user_id]["GuessTheWord"]["listWrongAnswer"].append(dataWeb["word"])

    if  data[user_id]["GuessTheWord"]["countGame"] != 0:
        oldPercent = round( len(data[user_id]["GuessTheWord"]["listRightAnswer"] ) / data[user_id]["GuessTheWord"]["countGame"], 2) * 100
        data[user_id]["GuessTheWord"]["countGame"] += 1
        newPercent = round( len(data[user_id]["GuessTheWord"]["listRightAnswer"] ) / data[user_id]["GuessTheWord"]["countGame"], 2) * 100
        statisticsPercent = "–ü—Ä–µ–¥—ã–¥—É—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥ " + str(oldPercent) + "%" + "\n–¢–µ–∫—É—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥ " + str(newPercent) + "%"
    else:
        data[user_id]["GuessTheWord"]["countGame"] += 1
        #—ç—Ç–æ –±—ã–ª–∞ –≤–∞—à–∞ –ø–µ—Ä–≤–∞—è –∏–≥—Ä–∞ 
        
    bot.send_message(
        message.chat.id,
        f'–°–ª–æ–≤–æ –±—ã–ª–æ {dataWeb["word"]}\n{statisticsPercent}\n–ú–æ–∂–µ—Ç–µ —É–±–µ–¥–∏—Ç—å—Å—è –≤ —ç—Ç–æ–º —Å–ª–æ–≤–µ \nhttps://yandex.ru/images/search?from=tabbar&text={dataWeb["word"]}+{dataWeb["theme"]}'
    )


@bot.message_handler(content_types=['text'])
def bot_message(message):
    userId = str(message.from_user.id)

    if message.text == "–ò–≥—Ä—ã":
        boardkeyboard = types.ReplyKeyboardMarkup()
        but1 = types.KeyboardButton("–í–∏–∫—Ç–æ—Ä–∏–Ω–∞")
        but2 = types.KeyboardButton("–£–≥–∞–¥–∞–π —Å–ª–æ–≤–æ",
                                    web_app=telebot.types.WebAppInfo(url="https://almaxymark.github.io/braingame/"))

        boardkeyboard.add(but1, but2)
        bot.send_message(userId, random.choice(option), reply_markup=boardkeyboard)
        return

    elif message.text == "–ü—Ä–æ—Ñ–∏–ª—å":
        money = str(data[userId]["Money"])
        bot.send_message(userId, f"ü§© –ò–≥—Ä–∞ –í–∏–∫—Ç–æ—Ä–∏–Ω–∞:\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–µ—à—ë–Ω–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è: {data[userId]['MathVictorina']['rightAnswerAllTime']}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–µ—à—ë–Ω–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –∏–≥—Ä—É: {data[userId]['MathVictorina']['rightAnswerLast']}\n–†–µ–∫–æ—Ä–¥: {data[userId]['MathVictorina']['maxRightAnswer']}\n\n–ò–≥—Ä–∞ –£–≥–∞–¥–∞–π —Å–ª–æ–≤–æ:\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≥–∞–¥–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤: {len(data[userId]['GuessTheWord']['listRightAnswer'])}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–æ—Ç–≥–∞–¥–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤: {len(data[userId]['GuessTheWord']['listWrongAnswer'])}\n{nameMoney}:{money}")

    elif message.text == "–ü–æ–º–æ—â—å":
        bot.send_message(userId, f"ü§î {random.choice(a0)}")

    if message.text == "–í–∏–∫—Ç–æ—Ä–∏–Ω–∞":

        data[userId]["MathVictorina"]["rightAnswerLast"] = 0
        data[userId]["isState"] = "MathVictorina"
        data[userId]["MathVictorina"]["attempts"] = 3

        tupleAnswers = generator_example()
        keyboard, example = tupleAnswers[0], tupleAnswers[1]
        data[userId]["MathVictorina"]["answer"] = tupleAnswers[2]

        bot.send_message(userId, random.choice(math))
        bot.send_message(userId, f"–†–µ—à–∞–π\n{example}", reply_markup=keyboard)

        SaveData()
        return

    elif message.text == "–£–≥–∞–¥–∞–π —Å–ª–æ–≤–æ":
        #start_GuessTheWord(userId)
        SaveData()
        return

    elif message.text == "–í—ã—Ö–æ–¥":
        data[userId]["isState"] = None

        boardkeyboard = types.ReplyKeyboardMarkup()
        but1 = types.KeyboardButton("–ò–≥—Ä—ã")
        but2 = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
        but3 = types.KeyboardButton("–ü–æ–º–æ—â—å")

        boardkeyboard.add(but1, but2, but3)
        bot.send_message(userId, f"–ß–µ–º –∑–∞–π–º—ë–º—Å—è?", reply_markup=boardkeyboard)
        SaveData()
        return

    if data[userId]["isState"] == "MathVictorina":
        if message.text == str(data[userId]["MathVictorina"]["answer"]):
            bot.send_message(userId, f"–ü—Ä–∞–≤–∏–ª—å–Ω–æ")
            data[userId]["MathVictorina"]["rightAnswerLast"] += 1
        else:
            bot.send_message(userId, f"–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ\n–û—Ç–≤–µ—Ç –±—ã–ª: {data[userId]['MathVictorina']['answer']}")
            data[userId]["MathVictorina"]["attempts"] -= 1

            if data[userId]["MathVictorina"]["attempts"] == 0:

                data[userId]["MathVictorina"]["rightAnswerAllTime"] += data[userId]["MathVictorina"]["rightAnswerLast"]
                if data[userId]["MathVictorina"]["rightAnswerLast"] > data[userId]["MathVictorina"]["maxRightAnswer"]:
                    data[userId]["MathVictorina"]["maxRightAnswer"] = data[userId]["MathVictorina"]["rightAnswerLast"]

                bot.send_message(userId, f"–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–µ—à—ë–Ω–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤: {data[userId]['MathVictorina']['rightAnswerLast']}\n–¢–µ–∫—É—â–∏–π —Ä–µ–∫–æ—Ä–¥: {data[userId]['MathVictorina']['maxRightAnswer']}\n –í—Å–µ–≥–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–µ—à—ë–Ω–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤: {data[userId]['MathVictorina']['rightAnswerAllTime']}")
                data[userId]["isState"] = None
                data[userId]["MathVictorina"]["attempts"] = 3

                boardkeyboard = types.ReplyKeyboardMarkup()
                but1 = types.KeyboardButton("–ò–≥—Ä—ã")
                but2 = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
                but3 = types.KeyboardButton("–ü–æ–º–æ—â—å")

                boardkeyboard.add(but1, but2, but3)
                bot.send_message(userId, f"–ß–µ–º –∑–∞–π–º—ë–º—Å—è?", reply_markup=boardkeyboard)
                SaveData()
                return


        tupleAnswers = generator_example()
        keyboard, example = tupleAnswers[0], tupleAnswers[1]
        data[userId]["MathVictorina"]["answer"] = tupleAnswers[2]
        bot.send_message(userId, f"–†–µ—à–∞–π\n{example}", reply_markup=keyboard)




    # elif data[userId]["isState"] == "GuessTheWord":
    #     if data[userId]["GuessTheWord"]["word"] != None:
    #         hideWord = ""
    #         word = data[userId]["GuessTheWord"]["word"]
    #         if message.text in word:
    #             data[userId]["GuessTheWord"]["currentLetters"] += message.text

    #         else:
    #             data[userId]["GuessTheWord"]["unCurrentLetters"] += message.text
    #             bot.send_message(userId, HANGMAN[7 - data[userId]["GuessTheWord"]["attempts"]])
    #             data[userId]["GuessTheWord"]["attempts"] -= 1

    #             if data[userId]["GuessTheWord"]["attempts"] == 0:
    #                 bot.send_message(userId, f"'{word}' –æ–∫–∞–∑–∞–ª–æ—Å—å —Ç–µ–º —Å–∞–º—ã–º —Å–ª–æ–≤–æ–º, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ —É–≥–∞–¥–∞—Ç—å.")
    #                 ResetGuessTheWord(data, userId, word, False)

    #                 boardkeyboard = types.ReplyKeyboardMarkup()
    #                 but1 = types.KeyboardButton("–ò–≥—Ä—ã")
    #                 but2 = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
    #                 but3 = types.KeyboardButton("–ü–æ–º–æ—â—å")

    #                 boardkeyboard.add(but1, but2, but3)
    #                 bot.send_message(userId, f"–ß–µ–º –∑–∞–π–º—ë–º—Å—è?", reply_markup=boardkeyboard)
    #                 SaveData()
    #                 return

    #         for o in data[userId]["GuessTheWord"]["word"]:
    #             if o in data[userId]["GuessTheWord"]["currentLetters"]:
    #                 hideWord += o
    #             else:
    #                 hideWord += "_ "

    #         if CheckWord(hideWord):
    #             bot.send_message(userId, "–¢—ã –æ—Ç–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ, –º–æ–ª–æ–¥–µ—Ü")
    #             ResetGuessTheWord(data, userId, word, True)

    #             boardkeyboard = types.ReplyKeyboardMarkup()
    #             but1 = types.KeyboardButton("–ò–≥—Ä—ã")
    #             but2 = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
    #             but3 = types.KeyboardButton("–ü–æ–º–æ—â—å")

    #             boardkeyboard.add(but1, but2, but3)
    #             bot.send_message(userId, f"–ß–µ–º –∑–∞–π–º—ë–º—Å—è?", reply_markup=boardkeyboard)
    #             SaveData()
    #             return
                
    #         Send_TextANDKeyboard(userId, hideWord)
    #         return

    #     else:
    #         word = getRandomWord(message.text)
    #         data[userId]["GuessTheWord"]["word"] = word
    #         SaveData()
    #         Send_TextANDKeyboard(userId, f"–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å, –≤—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–µ–º—É: {message.text}\n–í—ã–±–µ—Ä–∏—Ç–µ –±—É–∫–≤—É")
    #         return

# def start_GuessTheWord(userId: str):
#     data[userId]["GuessTheWord"]["attempts"] = 7
#     data[userId]["GuessTheWord"]["word"] = None
#     data[userId]["isState"] = "GuessTheWord"
#     data[userId]["GuessTheWord"]["currentLetters"] = ""
#     data[userId]["GuessTheWord"]["unCurrentLetters"] = ""
#     boardkeyboard = types.ReplyKeyboardMarkup(row_width=2, one_time_keyboard=True)

#     boardkeyboard.row("–§—Ä—É–∫—Ç—ã", "–û–≤–æ—â–∏", "–°–ø–æ—Ä—Ç", "–°—Ç—Ä–∞–Ω—ã")
#     boardkeyboard.row("–ü—Ä–æ—Ñ–µ—Å—Å–∏–∏", "–û–¥–µ–∂–¥–∞", "–ö–∞—á–µ—Å—Ç–≤–∞ —á–µ–ª–æ–≤–µ–∫–∞", "–¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞")
#     boardkeyboard.row("–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", "–ì–æ—Ä–æ–¥–∞", "–ü—Ç–∏—Ü—ã", "–†—ã–±–∞")
#     boardkeyboard.row("–í—ã—Ö–æ–¥")

#     bot.send_message(userId, f"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É:", reply_markup=boardkeyboard)

# def getRandomWord(theme: str):
#     return random.choice(dataWords[theme]).lower()

def generator_example():
    listAnswer = []
    num1 = random.randint(1, 100)
    num2 = random.randint(1, 100)
    rand = random.randint(1, 4)

    if rand == 1:
        answer = num1 + num2
        a = str(num1) + "+" + str(num2) + "=?"

    elif rand == 2:
        answer = num1 - num2
        a = str(num1) + "-" + str(num2) + "=?"

    elif rand == 3:
        answer = num1 * num2
        a = str(num1) + "*" + str(num2) + "=?"

    elif rand == 4:
        delimoe = num2 * num1
        answer = num1
        a = str(delimoe) + "/" + str(num2) + "=?"

    listAnswer.append(answer)
    listAnswer.append(answer + random.randint(1, 3))
    listAnswer.append(answer - random.randint(1, 5))
    listAnswer.append(answer + random.randint(4, 6))
    random.shuffle(listAnswer)
    boardkeyboard = types.ReplyKeyboardMarkup( row_width = 2)
    but1 = types.KeyboardButton(listAnswer[0])
    but2 = types.KeyboardButton(listAnswer[1])
    but3 = types.KeyboardButton(listAnswer[2])
    but4 = types.KeyboardButton(listAnswer[3])
    but5 = types.KeyboardButton("–í—ã—Ö–æ–¥")
    boardkeyboard.add(but1, but2, but3, but4, but5)
    return boardkeyboard, a, answer


# def Send_TextANDKeyboard(userId: str, text:str):
#     boardkeyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True)
#     boardkeyboard.row("—ë", "–π", "—Ü", "—É", "–∫", "–µ", "–Ω", "–≥", "—à", "—â", "–∑", "—Ö")
#     boardkeyboard.row("—Ñ", "—ã", "–≤", "–∞", "–ø", "—Ä", "–æ", "–ª", "–¥", "–∂", "—ç")
#     boardkeyboard.row("—è", "—á", "—Å", "–º", "–∏", "—Ç", "—å", "—ä", "–±", "—é")
#     boardkeyboard.row("–í—ã—Ö–æ–¥")

#     bot.send_message(userId, text, reply_markup=boardkeyboard)


# def CheckWord(word):
#     isWin = True
#     for i in word:
#         if i == "_":
#             isWin = False
#             return isWin
#     return isWin

# def ResetGuessTheWord(data:dict, userId:str, word:str, isWin:bool):
#     if isWin:
#         data[userId]["GuessTheWord"]["listRightAnswer"].append(word)
#     else:
#         data[userId]["GuessTheWord"]["listWrongAnswer"].append(word)


#     data[userId]["GuessTheWord"]["attempts"] = 7
#     data[userId]["isState"] = None
#     data[userId]['GuessTheWord']['word'] = None
#     data[userId]["GuessTheWord"]["currentLetters"] = ""
#     data[userId]["GuessTheWord"]["unCurrentLetters"] = ""

def HandlerWeb(data : str) -> dict:
    data = data.split()
    print(data)
    dictData = {}
    for i in data:
        key = i.split(":")[0]
        value = i.split(":")[1]
        dictData[key] = value
    print(dictData)
    return dictData


if __name__ == "__main__":
    print("–ù–∞—á–∞–ª–∏")
    bot.infinity_polling()